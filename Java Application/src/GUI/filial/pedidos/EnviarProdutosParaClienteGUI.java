/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.filial.pedidos;

import GUI.filial.vendas.*;
import GUI.matriz.filial.*;
import controller.PedidoController;
import java.util.Collection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import jpa.Filial;
import jpa.ItemPedido;
import jpa.Pedido;
import jpa.Produto;

/**
 *
 * @author Calebe de Paula Bianchini
 */
public class EnviarProdutosParaClienteGUI extends javax.swing.JFrame {
    
    private Filial filial = null;
    private PedidoController pedidoController = null;
    private Collection<Pedido> pedidosEnviar = null;
    private Collection<ItemPedido> itensPedido = null;
    private Collection<Pedido> pedidos = null;
    private Pedido pedido = null;

    /**
     * Creates new form ContatoGUI
     */
    public EnviarProdutosParaClienteGUI(Filial filial) {
        this.filial = filial;
        initComponents();
        botaoEnviar.setEnabled(false);
        title.setText("Filial " + this.filial.getNome());
        
 
    }
    
    //tabela com as categorias
    private void updateTable() {
        setControllers();
        
        this.itensPedido = (Collection)this.pedido.getItensPedido();
        if ( this.itensPedido !=null ) {
            
            ItemPedido[] vetorItensPedido = this.itensPedido.toArray(new ItemPedido[0]);
            Object[][] objects = new Object[vetorItensPedido.length][2];
            
            for (int i = 0; i < vetorItensPedido.length; i++) {
                objects[i][0] = vetorItensPedido[i].getProduto().getNome();
                objects[i][1] = vetorItensPedido[i].getQuantidade();
        }
        this.tblFiliais.setModel(new javax.swing.table.DefaultTableModel(
                objects,
                new String[]{ "Produto", "Quantidade" }));
        } else return;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        itsolution_logo = new javax.swing.JLabel();
        panelIncluirCategoria1 = new javax.swing.JPanel();
        comboPedidos = new javax.swing.JComboBox();
        nomeCategoriaText4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFiliais = new javax.swing.JTable();
        botaoVoltar = new javax.swing.JButton();
        botaoEnviar = new javax.swing.JButton();
        txtEndereco = new javax.swing.JLabel();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Contatos");

        title.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Enviar Pedidos");
        title.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        itsolution_logo.setText("ITSolution");

        panelIncluirCategoria1.setBorder(javax.swing.BorderFactory.createTitledBorder("Incluir"));

        comboPedidos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPedidosItemStateChanged(evt);
            }
        });

        nomeCategoriaText4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        nomeCategoriaText4.setText("Pedido");

        javax.swing.GroupLayout panelIncluirCategoria1Layout = new javax.swing.GroupLayout(panelIncluirCategoria1);
        panelIncluirCategoria1.setLayout(panelIncluirCategoria1Layout);
        panelIncluirCategoria1Layout.setHorizontalGroup(
            panelIncluirCategoria1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIncluirCategoria1Layout.createSequentialGroup()
                .addComponent(nomeCategoriaText4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboPedidos, 0, 544, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelIncluirCategoria1Layout.setVerticalGroup(
            panelIncluirCategoria1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIncluirCategoria1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelIncluirCategoria1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeCategoriaText4)
                    .addComponent(comboPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setEnabled(false);
        jScrollPane1.setFocusable(false);

        tblFiliais.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Nome", "Telefone"
            }
        ));
        jScrollPane1.setViewportView(tblFiliais);

        botaoVoltar.setText("Cancelar");
        botaoVoltar.setToolTipText("");
        botaoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVoltarActionPerformed(evt);
            }
        });

        botaoEnviar.setText("Enviar");
        botaoEnviar.setToolTipText("");
        botaoEnviar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                botaoEnviarMouseReleased(evt);
            }
        });
        botaoEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEnviarActionPerformed(evt);
            }
        });

        txtEndereco.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtEndereco.setText("Endereco:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(title)
                        .addGap(380, 380, 380)
                        .addComponent(itsolution_logo))
                    .addComponent(txtEndereco)
                    .addComponent(panelIncluirCategoria1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(botaoVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(botaoEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(itsolution_logo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelIncluirCategoria1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtEndereco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoVoltar)
                    .addComponent(botaoEnviar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-704)/2, (screenSize.height-579)/2, 704, 579);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVoltarActionPerformed
        dispose();
        new GUI.filial.InicioGUI(this.filial).setVisible(true);
    }//GEN-LAST:event_botaoVoltarActionPerformed

    private void comboPedidosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPedidosItemStateChanged
        if ( this.filial != null ) {
            if ( pedidosEnviar != null ) {
                for ( Pedido pedido: pedidosEnviar ) {
                    if ( pedido.getId().toString().equals(comboPedidos.getSelectedItem()) ) {
                        this.pedido = pedido;
                        this.txtEndereco.setText("Endereco:\n"
                                + this.pedido.getEndereco().toString());
                    }
                }
            }
            
        }
    }//GEN-LAST:event_comboPedidosItemStateChanged

    private void botaoEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEnviarActionPerformed
        setControllers();
        if (this.pedido != null) {
            this.pedido.setPedidoEnviadoCliente(true);
            pedidoController.edit(pedido);
        }
        
    }//GEN-LAST:event_botaoEnviarActionPerformed

    private void botaoEnviarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botaoEnviarMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_botaoEnviarMouseReleased

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoEnviar;
    private javax.swing.JButton botaoVoltar;
    private javax.swing.JComboBox comboPedidos;
    private javax.swing.JLabel itsolution_logo;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nomeCategoriaText4;
    private javax.swing.JPanel panelIncluirCategoria1;
    private javax.swing.JTable tblFiliais;
    private javax.swing.JLabel title;
    private javax.swing.JLabel txtEndereco;
    // End of variables declaration//GEN-END:variables

  
    public javax.swing.JComboBox getComboProdutoFilial() {
        return comboPedidos;
    }

    /**
     * @param comboProdutoFilial the comboProdutoFilial to set
     */
   
    public void setControllers() {
        
        try {
            if (pedidoController == null) {
                pedidoController = new PedidoController();
            }
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao conectar com o servidor...");
            Logger.getLogger(RelacionarFilialGUI.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
    }
    
    private void filtraPedidos(){
        setControllers();
        pedidos = pedidoController.findAll();
        
        if ( pedidos!= null ) {
            for (Pedido pedido: pedidos) {
                if ( !pedido.isPedidoEnviadoCliente() && pedido.isPedidoEncaminhado() && pedido.isPedidoLojaFisica() && pedido.getFilial().getNome().equals(this.filial.getNome())) {
                    pedidosEnviar.add(pedido);
                }
            }
        }
    }
    
    
    public void setComboPedidos(javax.swing.JComboBox comboPedidos) {
        setControllers();
        filtraPedidos();
        if ( pedidosEnviar!= null ) {
            for (Pedido pedido: pedidosEnviar) {
                comboPedidos.addItem(pedido.getId());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Todos os pedidos ja foram encaminhados para as filiais.");
            botaoEnviar.setEnabled(false);
            
        }
        this.comboPedidos = comboPedidos;
    }
    
}
